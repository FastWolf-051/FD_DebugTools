/* #------------------ License ------------------#
*  #---------- Created By FastDevil -------------#
*  #--------- DO NOT EDIT this file -------------#
*  #------- This file is a library part ---------#
*  #---------------------------------------------#
*  #-------- ©Copyright FastDevil 2024 ----------#
*  #---------------------------------------------#
*/

using FastDevil.Debug.CRT_Tasks;

namespace FastDevil.Debug;
sealed class CRT_Error : CRT_ErrorT{
    private readonly long _errorCode;
    private readonly string? _errorReason;
    private readonly byte _errorPriority;
    private readonly byte _errorColor = 4;
    private readonly string _lbr = "\n";
    public void CE_Error(){
        Console.ForegroundColor = (ConsoleColor)_errorColor;
        CE_Error_Code(_errorCode);
        CE_Error_Info(_errorReason);
        CE_Error_Prtt(_errorPriority);
        CE_Lbr();
        Console.ForegroundColor= ConsoleColor.White;
    }
    private void CE_Error_Code(long _code) {
        Console.Write($"Error code: {_code} ");
    }
    private void CE_Error_Info(string? _info) {
        Console.Write($"Reason: {_info} , ");
    }
    private void CE_Lbr(){
        Console.Write(_lbr);
    }
    private void CE_Error_Prtt(byte _priority){
        switch(_priority){
            case 1:
                Console.Write($"Priority: {_priority} [default]");
                break;
            case 2:
                Console.Write($"Priority: {_priority} [Not dangerous]");
                break;
            case 3:
                Console.Write($"Priority: {_priority} [Middle priority]");
                break;
            case 4:
                Console.Write($"Priority: {_priority} [High priority]");
                break;
            case 5:
                Console.Write($"Priority: {_priority} [Critical error]");
                break;
            default:
                throw new IndexOutOfRangeException("Invaild priority");
        }
    }
    public CRT_Error(long _errorCode,string? _errorReason,byte _errorPriority){
        this._errorCode = _errorCode;
        this._errorReason = _errorReason;
        this._errorPriority = _errorPriority;
        CE_Error();
    }
}